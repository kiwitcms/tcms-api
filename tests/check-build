#!/bin/bash

# Build packages for distribution on PyPI
# and execute some sanity checks on them
#
# note: must be executed from the root directory of the project

# first clean up the local environment
echo "..... Clean up first"
find . -type f -name '*.pyc' -delete
find . -type d -name __pycache__ -delete
find . -type d -name '*.egg-info' | xargs rm -rf
rm -rf build/ .cache/ dist/ .eggs/ .tox/ .venv/


echo "..... Building PyPI packages for tcms-api"
set -e
$(which python) setup.py sdist >/dev/null
$(which python) setup.py bdist_wheel >/dev/null
set +e

# check rst formatting of README before building the package
echo "..... Check rst formatting for PyPI"
twine check dist/* || exit 1

# then run some sanity tests
echo "..... Searching for .pyc files inside the built packages"
matched_files=`tar -tvf dist/tcms-api-*.tar.gz | grep -c "\.pyc"`
if [ "$matched_files" -gt "0" ]; then
    echo "ERROR: .pyc files found in .tar.gz package"
    exit 1
fi
WHEEL_UNPACK_DIR=`mktemp -d`
wheel unpack --dest "$WHEEL_UNPACK_DIR" dist/tcms_api*.whl
matched_files=`find "$WHEEL_UNPACK_DIR" -type f | grep -c "\.pyc"`
rm -rf "$WHEEL_UNPACK_DIR"
if [ "$matched_files" -gt "0" ]; then
    echo "ERROR: .pyc files found in wheel package"
    exit 1
fi

# exit on error from now on
set -e

echo "..... Trying to install the new tarball inside a virtualenv"
virtualenv -q -p $(which python) .venv/test-tarball
source .venv/test-tarball/bin/activate
pip install --upgrade setuptools setuptools_scm==6.0.1 pip
pip install --no-binary :all: gssapi
pip install --no-binary :all: dist/tcms-api*.tar.gz
pip freeze | grep tcms-api
deactivate
rm -rf .venv/

echo "..... Trying to install the new wheel inside a virtualenv"
virtualenv -q -p $(which python) .venv/test-wheel
source .venv/test-wheel/bin/activate
pip install --upgrade setuptools setuptools_scm==6.0.1 pip
pip install gssapi
pip install --only-binary :all: dist/tcms_api*.whl
pip freeze | grep tcms-api
deactivate
rm -rf .venv/

echo "..... PASS"
